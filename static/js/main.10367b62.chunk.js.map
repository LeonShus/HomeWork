{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","classes","container","first","avatar","src","alt","second","a","name","message","time","messageData","HW1","Affair","affair","priority","low","middle","high","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","buttonsLine","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","errorWord","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","trimName","trim","length","e","val","currentTarget","alert","HW3","setUsers","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,uBAAuB,OAAS,wBAAwB,OAAS,wBAAwB,EAAI,mBAAmB,KAAO,sBAAsB,QAAU,yBAAyB,KAAO,wB,kBCAxPD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,IAAM,oBAAoB,OAAS,uBAAuB,KAAO,uB,kBCAzHD,EAAOC,QAAU,CAAC,UAAY,6B,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,UAAY,8B,iBCA9DD,EAAOC,QAAU,CAAC,IAAM,mB,iJC8BTC,MArBf,SAAiBC,GACb,OACI,sBAAKC,UAAWC,IAAQC,UAAxB,UACI,qBAAKF,UAAWC,IAAQE,MAAxB,SACI,qBAAKH,UAAWC,IAAQG,OAAQC,IAAKN,EAAMK,OAAQE,IAAI,aAE3D,sBAAKN,UAAWC,IAAQM,OAAxB,UAEI,qBAAKP,UAAWC,IAAQO,IAExB,qBAAKR,UAAWC,IAAQQ,KAAxB,SAA+BV,EAAMU,OACrC,qBAAKT,UAAWC,IAAQS,QAAxB,SAAkCX,EAAMW,UACxC,sBAAMV,UAAWC,IAAQU,KAAzB,SAAgCZ,EAAMY,cCnBhDC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QA0BKC,MAvBf,WACI,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CACIT,OAAQQ,EACRH,KAAMG,EACNF,QAASE,EACTD,KAAMC,IAGV,uBAGA,2B,uBCCGE,MApBf,SAAgBf,GAGZ,OACI,sBAAKC,UAAWC,IAAQC,UAAxB,UACI,8BACMH,EAAMgB,OAAON,OAEnB,qBAAKT,UAAS,UAAgC,QAA1BD,EAAMgB,OAAOC,SAAqBf,IAAQgB,IACkB,WAA1BlB,EAAMgB,OAAOC,SACbf,IAAQiB,OACRjB,IAAQkB,MAH9D,SAIMpB,EAAMgB,OAAOC,WAGnB,wBAAQI,QAdO,kBAAMrB,EAAMsB,qBAAqBtB,EAAMgB,OAAOO,MAc7D,mB,gBCiBGC,MA9Bf,SAAiBxB,GACb,IAAMyB,EAAgBzB,EAAM0B,KAAKC,KAAI,SAAClB,GAAD,OACjC,cAAC,EAAD,CAEIO,OAAQP,EACRa,qBAAsBtB,EAAMsB,sBAFvBb,EAAEc,QAWf,OACI,gCACI,qBAAKtB,UAAWC,IAAQC,UAAxB,SACKsB,IAGL,sBAAKxB,UAAWC,IAAQ0B,YAAxB,UACI,wBAAQP,QAZL,kBAAMrB,EAAM6B,UAAU,QAYzB,iBACA,wBAAQR,QAZJ,kBAAMrB,EAAM6B,UAAU,SAY1B,kBACA,wBAAQR,QAZF,kBAAMrB,EAAM6B,UAAU,WAY5B,oBACA,wBAAQR,QAZL,kBAAMrB,EAAM6B,UAAU,QAYzB,wBCtBVC,EAAoC,CACtC,CAACP,IAAK,EAAGb,KAAM,QAASO,SAAU,QAClC,CAACM,IAAK,EAAGb,KAAM,QAASO,SAAU,OAClC,CAACM,IAAK,EAAGb,KAAM,QAASO,SAAU,OAClC,CAACM,IAAK,EAAGb,KAAM,OAAQO,SAAU,QACjC,CAACM,IAAK,EAAGb,KAAM,aAAcO,SAAU,WAsC5Bc,MA3Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EAXmB,SAACH,EAA4BE,GACtD,MAAkB,QAAXA,EAAmBF,EAAUA,EAAQE,QAAO,SAAA1B,GAAC,OAAIA,EAAEQ,WAAakB,KAU/CE,CAAcJ,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIT,KAAMU,EACNP,UAAWA,EACXP,qBAXiB,SAACC,GAAD,OAAiBW,EATtB,SAACD,EAA4BV,GACrD,OAAOU,EAAQE,QAAO,SAAA1B,GAAC,OAAIA,EAAEc,MAAQA,KAQoBe,CAAaL,EAASV,OAcvE,uBAGA,2B,gCCzBGgB,EAf+B,SAAC,GAEzC,IADD7B,EACA,EADAA,KAAM8B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAElCC,EAAaF,GAASG,IAAEH,MACxBI,EAAYD,IAAEC,UACpB,OACI,gCACI,uBAAOC,MAAOrC,EAAMsC,SAAUR,EAAiBvC,UAAW2C,IAC1D,sBAAM3C,UAAW6C,EAAjB,SAA6BJ,IAC7B,wBAAQrB,QAASoB,EAAjB,iBACA,+BAAOE,QCmBJM,EA/BiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEnB,mBAAiB,IADiD,mBACnFtB,EADmF,KAC7E0C,EAD6E,OAEhEpB,mBAAiB,IAF+C,mBAEnFU,EAFmF,KAE5EW,EAF4E,KAWtFC,EAAW5C,EAAK6C,OAOdZ,EAAaO,EAAMM,OAEzB,OACI,cAAC,EAAD,CACI9C,KAAMA,EACN8B,gBAnBgB,SAACiB,GACrB,IAAIC,EAAMD,EAAEE,cAAcZ,MAC1BK,EAAQM,GAERA,EAAIH,OAASF,EAAS,IAAMA,EAAS,kBAgBjCZ,QAZQ,WACZmB,MAAM,SAAD,OAAUN,EAAV,MACLH,EAAgBG,GAChBF,EAAQ,KAUJV,MAAOA,EACPC,WAAYA,KCFTkB,MAtBf,WAAgB,IAAD,EACe7B,mBAA0B,IADzC,mBACJkB,EADI,KACGY,EADH,KAOX,OACI,gCACI,uBADJ,cAII,cAAC,EAAD,CAAmBZ,MAAOA,EAAOC,gBATjB,SAACzC,GACrBoD,EAAS,GAAD,mBAAMZ,GAAN,CAAa,CAAE3B,IAAKwC,cAAMrD,KAAMA,SAUpC,uBAGA,2BCRGsD,MAdf,WACI,OACI,sBAAK/D,UAAW4C,IAAEmB,IAAlB,UACI,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCAQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAvC,GACHwC,QAAQxC,MAAMA,EAAM/B,c","file":"static/js/main.10367b62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__eWnXW\",\"first\":\"Message_first__1Sjli\",\"avatar\":\"Message_avatar__3DPlV\",\"second\":\"Message_second__3AmWY\",\"a\":\"Message_a__2RSFl\",\"name\":\"Message_name__3HQCm\",\"message\":\"Message_message__1sA_c\",\"time\":\"Message_time__3Ngk8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affair_container__2JgfC\",\"low\":\"Affair_low__v0kwd\",\"middle\":\"Affair_middle__1plFM\",\"high\":\"Affair_high__1h6U_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affairs_container__2HWkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__2uGcq\",\"errorWord\":\"Greeting_errorWord__3EPHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Bgxzr\"};","import React from \"react\"\nimport classes from \"./Message.module.css\"\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={classes.container}>\n            <div className={classes.first}>\n                <img className={classes.avatar} src={props.avatar} alt=\"avatar\"/>\n            </div>\n            <div className={classes.second}>\n\n                <div className={classes.a}></div>\n\n                <div className={classes.name}>{props.name}</div>\n                <div className={classes.message}>{props.message}</div>\n                <span className={classes.time}>{props.time}</span>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport classes from './Affair.module.css'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)\n\n    return (\n        <div className={classes.container}>\n            <div>\n                { props.affair.name }\n            </div>\n            <div className={ `${props.affair.priority === \"low\" ? classes.low \n                                                                : props.affair.priority === \"middle\"\n                                                                ? classes.middle\n                                                                : classes.high}` }>\n                { props.affair.priority }\n            </div>\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {Dispatch, SetStateAction} from \"react\"\nimport Affair from './Affair'\nimport classes from './Affairs.module.css'\nimport {AffairType, FilterType} from \"./HW2\"\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => props.setFilter('all')\n    const setHigh = () => props.setFilter('high')\n    const setMiddle = () => props.setFilter('middle')\n    const setLow = () => props.setFilter('low')\n\n    return (\n        <div>\n            <div className={classes.container}>\n                {mappedAffairs}\n            </div>\n\n            <div className={classes.buttonsLine}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from \"react\"\nimport Affairs from \"./Affairs\"\n\n// types\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type FilterType = \"all\" | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    return filter === \"all\" ? affairs : affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\")\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно раб отать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from \"react\"\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error && s.error\n    const errorWord = s.errorWord\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span className={errorWord}>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from \"react\"\nimport Greeting from \"./Greeting\"\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>(\"\")\n    const [error, setError] = useState<string>(\"\")\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let val = e.currentTarget.value\n        setName(val)\n\n        val.trim() ? setError(\"\") : setError(\"Incorect name\")\n    }\n\n    let trimName = name.trim()\n    const addUser = () => {\n        alert(`Hello ${trimName}!`)\n        addUserCallback(trimName)\n        setName(\"\")\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        setUsers([ ...users, { _id: v1(), name: name } ])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from '../../../p2-homeworks/h3/HW3';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            {/*<HW4/>*/}\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}