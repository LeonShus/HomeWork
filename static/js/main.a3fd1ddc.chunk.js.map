{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","classes","container","first","avatar","src","alt","second","a","name","message","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","priority","low","middle","high","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","buttonsLine","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","GreetingContainer","users","addUserCallback","setName","setError","trimName","trim","alert","length","val","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a3fd1ddc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__eWnXW\",\"first\":\"Message_first__1Sjli\",\"avatar\":\"Message_avatar__3DPlV\",\"second\":\"Message_second__3AmWY\",\"a\":\"Message_a__2RSFl\",\"name\":\"Message_name__3HQCm\",\"message\":\"Message_message__1sA_c\",\"time\":\"Message_time__3Ngk8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affair_container__2JgfC\",\"low\":\"Affair_low__v0kwd\",\"middle\":\"Affair_middle__1plFM\",\"high\":\"Affair_high__1h6U_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2-s3I\",\"errorInput\":\"SuperInputText_errorInput__381aN\",\"error\":\"SuperInputText_error__vFgwy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__sqZ5u\",\"column\":\"HW4_column__ZVATx\",\"testSpanError\":\"HW4_testSpanError__2zMAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2SGcH\",\"red\":\"SuperButton_red__zljBA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Affairs_container__2HWkw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3Zptv\",\"spanClassName\":\"SuperCheckbox_spanClassName__NDRuo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Bgxzr\"};","import React from \"react\"\nimport classes from \"./Message.module.css\"\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={classes.container}>\n            <div className={classes.first}>\n                <img className={classes.avatar} src={props.avatar} alt=\"avatar\"/>\n            </div>\n            <div className={classes.second}>\n\n                <div className={classes.a}></div>\n\n                <div className={classes.name}>{props.name}</div>\n                <div className={classes.message}>{props.message}</div>\n                <span className={classes.time}>{props.time}</span>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport classes from './Affair.module.css'\nimport {AffairType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)\n\n    return (\n        <div className={classes.container}>\n            <div>\n                { props.affair.name }\n            </div>\n            <div className={ `${props.affair.priority === \"low\" ? classes.low \n                                                                : props.affair.priority === \"middle\"\n                                                                ? classes.middle\n                                                                : classes.high}` }>\n                { props.affair.priority }\n            </div>\n\n            <SuperButton onClick={deleteCallback}>&#10006;</SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {Dispatch, SetStateAction} from \"react\"\nimport Affair from './Affair'\nimport classes from './Affairs.module.css'\nimport {AffairType, FilterType} from \"./HW2\"\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => props.setFilter('all')\n    const setHigh = () => props.setFilter('high')\n    const setMiddle = () => props.setFilter('middle')\n    const setLow = () => props.setFilter('low')\n\n    return (\n        <div>\n            <div className={classes.container}>\n                {mappedAffairs}\n            </div>\n\n            <div className={classes.buttonsLine}>\n                <SuperButton onClick={setAll}>All</SuperButton>\n                <SuperButton onClick={setHigh}>High</SuperButton>\n                <SuperButton onClick={setMiddle}>Middle</SuperButton>\n                <SuperButton onClick={setLow}>Low</SuperButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from \"react\"\nimport Affairs from \"./Affairs\"\n\n// types\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type FilterType = \"all\" | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    return filter === \"all\" ? affairs : affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\")\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно раб отать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error && s.errorInput} ${className ? className : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from \"react\"\nimport s from './Greeting.module.css'\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    return (\n        <div>\n            <SuperInputText value={name} onChange={setNameCallback} onKeyPress={onEnter} error={error}/>\n            <SuperButton onClick={addUser}>add</SuperButton>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState, KeyboardEvent} from \"react\"\nimport Greeting from \"./Greeting\"\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>(\"\")\n    const [error, setError] = useState<string>(\"\")\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let val = e.currentTarget.value\n        setName(val)\n\n        val.trim() ? setError(\"\") : setError(\"Incorrect name\")\n    }\n\n    let trimName = name.trim()\n    const addUser = () => {\n        if(trimName){\n            alert(`Hello ${trimName}!`)\n            addUserCallback(trimName)\n            setName(\"\")\n        }\n\n    }\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if(e.key === 'Enter'){\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n    const addUserCallback = (name: string) => {\n        setUsers([ ...users, { _id: v1(), name } ])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\"\nimport s from \"./SuperCheckbox.module.css\"\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked &&\n        onChangeChecked(e.currentTarget.checked)\n\n        onChange &&\n        onChange(e)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}